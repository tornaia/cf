// Generated by jextract

package com.github.tornaia.cf.win;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import jdk.incubator.foreign.*;
import jdk.incubator.foreign.MemoryLayout.PathElement;
import static jdk.incubator.foreign.CLinker.*;
class sysinfoapi_h$constants$112 extends sysinfoapi_h$constants$111 {

    /* package-private */ sysinfoapi_h$constants$112() {}
    static final int PROPSETFLAG_DEFAULT() { return (int)0L; }

    static final int PROPSETFLAG_NONSIMPLE() { return (int)1L; }

    static final int PROPSETFLAG_ANSI() { return (int)2L; }

    static final int PROPSETFLAG_UNBUFFERED() { return (int)4L; }

    static final int PROPSETFLAG_CASE_SENSITIVE() { return (int)8L; }

    static final int PROPSET_BEHAVIOR_CASE_SENSITIVE() { return (int)1L; }

    static final int PID_DICTIONARY() { return (int)0L; }

    static final int PID_CODEPAGE() { return (int)1L; }

    static final int PID_FIRST_USABLE() { return (int)2L; }

    static final int PID_FIRST_NAME_DEFAULT() { return (int)4095L; }

    static final int PID_LOCALE() { return (int)2147483648L; }

    static final int PID_MODIFY_TIME() { return (int)2147483649L; }

    static final int PID_SECURITY() { return (int)2147483650L; }

    static final int PID_BEHAVIOR() { return (int)2147483651L; }

    static final int PID_ILLEGAL() { return (int)4294967295L; }

    static final int PID_MIN_READONLY() { return (int)2147483648L; }

    static final int PID_MAX_READONLY() { return (int)3221225471L; }

    static final int PRSPEC_INVALID() { return (int)4294967295L; }

    static final int PRSPEC_LPWSTR() { return (int)0L; }

    static final int PRSPEC_PROPID() { return (int)1L; }

    static final int PROPSETHDR_OSVERSION_UNKNOWN() { return (int)4294967295L; }

    static final int STGM_DIRECT() { return (int)0L; }

    static final int STGM_TRANSACTED() { return (int)65536L; }

    static final int STGM_SIMPLE() { return (int)134217728L; }

    static final int STGM_READ() { return (int)0L; }

    static final int STGM_WRITE() { return (int)1L; }

    static final int STGM_READWRITE() { return (int)2L; }

    static final int STGM_SHARE_DENY_NONE() { return (int)64L; }

    static final int STGM_SHARE_DENY_READ() { return (int)48L; }

    static final int STGM_SHARE_DENY_WRITE() { return (int)32L; }

    static final int STGM_SHARE_EXCLUSIVE() { return (int)16L; }

    static final int STGM_PRIORITY() { return (int)262144L; }

    static final int STGM_DELETEONRELEASE() { return (int)67108864L; }

    static final int STGM_NOSCRATCH() { return (int)1048576L; }

    static final int STGM_CREATE() { return (int)4096L; }

    static final int STGM_CONVERT() { return (int)131072L; }

    static final int STGM_FAILIFTHERE() { return (int)0L; }

    static final int STGM_NOSNAPSHOT() { return (int)2097152L; }

    static final int STGM_DIRECT_SWMR() { return (int)4194304L; }

    static final int ASYNC_MODE_COMPATIBILITY() { return (int)1L; }

    static final int ASYNC_MODE_DEFAULT() { return (int)0L; }

    static final int STGTY_REPEAT() { return (int)256L; }

    static final int STG_TOEND() { return (int)4294967295L; }

    static final int STG_LAYOUT_SEQUENTIAL() { return (int)0L; }

    static final int STG_LAYOUT_INTERLEAVED() { return (int)1L; }

    static final int UPDFCACHE_NODATACACHE() { return (int)1L; }

    static final int UPDFCACHE_ONSAVECACHE() { return (int)2L; }

    static final int UPDFCACHE_ONSTOPCACHE() { return (int)4L; }

    static final int UPDFCACHE_NORMALCACHE() { return (int)8L; }

    static final int UPDFCACHE_IFBLANK() { return (int)16L; }

    static final int UPDFCACHE_ONLYIFBLANK() { return (int)2147483648L; }

    static final int UPDFCACHE_IFBLANKORONSAVECACHE() { return (int)18L; }

    static final int UPDFCACHE_ALL() { return (int)2147483647L; }

    static final int UPDFCACHE_ALLBUTNODATACACHE() { return (int)2147483646L; }

    static final int MK_ALT() { return (int)32L; }

    static final int DROPEFFECT_NONE() { return (int)0L; }

    static final int DROPEFFECT_COPY() { return (int)1L; }

    static final int DROPEFFECT_MOVE() { return (int)2L; }

    static final int DROPEFFECT_LINK() { return (int)4L; }

    static final int DROPEFFECT_SCROLL() { return (int)2147483648L; }

    static final int DD_DEFSCROLLINSET() { return (int)11L; }

    static final int DD_DEFSCROLLDELAY() { return (int)50L; }

    static final int DD_DEFSCROLLINTERVAL() { return (int)50L; }

    static final int DD_DEFDRAGDELAY() { return (int)200L; }

    static final int DD_DEFDRAGMINDIST() { return (int)2L; }

    static final int BINDF_DONTUSECACHE() { return (int)16L; }

    static final int BINDF_DONTPUTINCACHE() { return (int)32L; }

    static final int BINDF_NOCOPYDATA() { return (int)128L; }

    static final MemoryAddress INVALID_P_ROOT_SECURITY_ID$ADDR_CONSTANT_ = MemoryAddress.ofLong(-1L);
    static final jdk.incubator.foreign.MemoryAddress INVALID_P_ROOT_SECURITY_ID() { return INVALID_P_ROOT_SECURITY_ID$ADDR_CONSTANT_; }

    static final int PI_DOCFILECLSIDLOOKUP() { return (int)32L; }

    static final MemorySegment SZ_URLCONTEXT$SEGMENT_CONSTANT_ = CLinker.toCString("U");
    static final jdk.incubator.foreign.MemorySegment SZ_URLCONTEXT() { return SZ_URLCONTEXT$SEGMENT_CONSTANT_; }

    static final MemorySegment SZ_ASYNC_CALLEE$SEGMENT_CONSTANT_ = CLinker.toCString("A");
    static final jdk.incubator.foreign.MemorySegment SZ_ASYNC_CALLEE() { return SZ_ASYNC_CALLEE$SEGMENT_CONSTANT_; }

    static final MemoryAddress CFSTR_MIME_NULL$ADDR_CONSTANT_ = MemoryAddress.ofLong(0L);
    static final jdk.incubator.foreign.MemoryAddress CFSTR_MIME_NULL() { return CFSTR_MIME_NULL$ADDR_CONSTANT_; }

    static final int MK_S_ASYNCHRONOUS() { return (int)262632L; }

    static final int S_ASYNCHRONOUS() { return (int)262632L; }

    static final int INET_E_CANNOT_LOCK_REQUEST() { return (int)-2146697194L; }

    static final int INET_E_USE_EXTEND_BINDING() { return (int)-2146697193L; }

    static final int INET_E_TERMINATED_BIND() { return (int)-2146697192L; }

    static final int INET_E_RESERVED_1() { return (int)-2146697190L; }

    static final int INET_E_BLOCKED_REDIRECT_XSECURITYID() { return (int)-2146697189L; }

    static final int INET_E_DOMINJECTIONVALIDATION() { return (int)-2146697188L; }

    static final int INET_E_VTAB_SWITCH_FORCE_ENGINE() { return (int)-2146697187L; }

    static final int INET_E_HSTS_CERTIFICATE_ERROR() { return (int)-2146697186L; }

    static final int INET_E_RESERVED_2() { return (int)-2146697185L; }

    static final int INET_E_RESERVED_3() { return (int)-2146697184L; }

    static final int INET_E_RESERVED_4() { return (int)-2146697183L; }

    static final int INET_E_RESERVED_5() { return (int)-2146697182L; }

    static final int INET_E_ERROR_FIRST() { return (int)-2146697214L; }

    static final int INET_E_CODE_DOWNLOAD_DECLINED() { return (int)-2146696960L; }

    static final int INET_E_RESULT_DISPATCHED() { return (int)-2146696704L; }

    static final int INET_E_CANNOT_REPLACE_SFP_FILE() { return (int)-2146696448L; }

    static final int INET_E_CODE_INSTALL_SUPPRESSED() { return (int)-2146696192L; }

    static final int INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY() { return (int)-2146695936L; }

    static final int INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE() { return (int)-2146695935L; }

    static final int INET_E_CODE_INSTALL_BLOCKED_IMMERSIVE() { return (int)-2146695934L; }

    static final int INET_E_FORBIDFRAMING() { return (int)-2146695933L; }

    static final int INET_E_CODE_INSTALL_BLOCKED_ARM() { return (int)-2146695932L; }

    static final int INET_E_BLOCKED_PLUGGABLE_PROTOCOL() { return (int)-2146695931L; }

    static final int INET_E_BLOCKED_ENHANCEDPROTECTEDMODE() { return (int)-2146695930L; }

    static final int INET_E_CODE_INSTALL_BLOCKED_BITNESS() { return (int)-2146695929L; }

    static final int INET_E_DOWNLOAD_BLOCKED_BY_CSP() { return (int)-2146695928L; }

    static final int INET_E_ERROR_LAST() { return (int)-2146695928L; }

    static final int Uri_HAS_ABSOLUTE_URI() { return (int)1L; }

    static final int Uri_HAS_AUTHORITY() { return (int)2L; }

    static final int Uri_HAS_DISPLAY_URI() { return (int)4L; }

    static final int Uri_HAS_DOMAIN() { return (int)8L; }

    static final int Uri_HAS_EXTENSION() { return (int)16L; }

    static final int Uri_HAS_FRAGMENT() { return (int)32L; }

    static final int Uri_HAS_HOST() { return (int)64L; }

    static final int Uri_HAS_PASSWORD() { return (int)128L; }

    static final int Uri_HAS_PATH() { return (int)256L; }

    static final int Uri_HAS_QUERY() { return (int)1024L; }

    static final int Uri_HAS_RAW_URI() { return (int)2048L; }

    static final int Uri_HAS_SCHEME_NAME() { return (int)4096L; }

    static final int Uri_HAS_USER_NAME() { return (int)16384L; }

    static final int Uri_HAS_PATH_AND_QUERY() { return (int)512L; }

    static final int Uri_HAS_USER_INFO() { return (int)8192L; }

    static final int Uri_HAS_HOST_TYPE() { return (int)32768L; }

    static final int Uri_HAS_PORT() { return (int)65536L; }

    static final int Uri_HAS_SCHEME() { return (int)131072L; }

    static final int Uri_HAS_ZONE() { return (int)262144L; }

    static final int Uri_ENCODING_RFC() { return (int)41L; }

    static final int PARSE_ENCODE() { return (int)7L; }

    static final int PARSE_DECODE() { return (int)8L; }

    static final int INET_E_USE_DEFAULT_PROTOCOLHANDLER() { return (int)-2146697199L; }

    static final int INET_E_USE_DEFAULT_SETTING() { return (int)-2146697198L; }

    static final int INET_E_DEFAULT_ACTION() { return (int)-2146697199L; }

    static final int INET_E_QUERYOPTION_UNKNOWN() { return (int)-2146697197L; }

    static final int INET_E_REDIRECTING() { return (int)-2146697196L; }

    static final int PIDDI_THUMBNAIL() { return (int)2L; }

    static final int PIDSI_TITLE() { return (int)2L; }

    static final int PIDSI_SUBJECT() { return (int)3L; }

    static final int PIDSI_AUTHOR() { return (int)4L; }

    static final int PIDSI_KEYWORDS() { return (int)5L; }

    static final int PIDSI_COMMENTS() { return (int)6L; }

    static final int PIDSI_TEMPLATE() { return (int)7L; }

    static final int PIDSI_LASTAUTHOR() { return (int)8L; }

    static final int PIDSI_REVNUMBER() { return (int)9L; }

    static final int PIDSI_EDITTIME() { return (int)10L; }

    static final int PIDSI_LASTPRINTED() { return (int)11L; }

    static final int PIDSI_CREATE_DTM() { return (int)12L; }

    static final int PIDSI_LASTSAVE_DTM() { return (int)13L; }

    static final int PIDSI_PAGECOUNT() { return (int)14L; }

    static final int PIDSI_WORDCOUNT() { return (int)15L; }

    static final int PIDSI_CHARCOUNT() { return (int)16L; }

    static final int PIDSI_THUMBNAIL() { return (int)17L; }

    static final int PIDSI_APPNAME() { return (int)18L; }

    static final int PIDSI_DOC_SECURITY() { return (int)19L; }

    static final int PIDMSI_EDITOR() { return (int)2L; }

    static final int PIDMSI_SUPPLIER() { return (int)3L; }

    static final int PIDMSI_SOURCE() { return (int)4L; }

    static final int PIDMSI_SEQUENCE_NO() { return (int)5L; }

    static final int PIDMSI_PROJECT() { return (int)6L; }

    static final int PIDMSI_STATUS() { return (int)7L; }

    static final int PIDMSI_OWNER() { return (int)8L; }

    static final int PIDMSI_RATING() { return (int)9L; }

    static final int PIDMSI_PRODUCTION() { return (int)10L; }

    static final int PIDMSI_COPYRIGHT() { return (int)11L; }

    static final int VAR_TIMEVALUEONLY() { return (int)1L; }

    static final int VAR_DATEVALUEONLY() { return (int)2L; }

    static final int VAR_VALIDDATE() { return (int)4L; }

    static final int VAR_CALENDAR_HIJRI() { return (int)8L; }

    static final int VAR_LOCALBOOL() { return (int)16L; }

    static final int VAR_FORMAT_NOSUBSTITUTE() { return (int)32L; }

    static final int VAR_FOURDIGITYEARS() { return (int)64L; }

    static final int VAR_CALENDAR_THAI() { return (int)128L; }

    static final int VAR_CALENDAR_GREGORIAN() { return (int)256L; }

    static final int VTDATEGRE_MIN() { return (int)-657434L; }

    static final int VTBIT_I1() { return (int)65536L; }

    static final int VTBIT_UI1() { return (int)131072L; }

    static final int VTBIT_I2() { return (int)4L; }

    static final int VTBIT_UI2() { return (int)262144L; }

    static final int VTBIT_I4() { return (int)8L; }

    static final int VTBIT_UI4() { return (int)524288L; }

    static final int VTBIT_I8() { return (int)1048576L; }

    static final int VTBIT_UI8() { return (int)2097152L; }

    static final int VTBIT_R4() { return (int)16L; }

    static final int VTBIT_R8() { return (int)32L; }

    static final int VTBIT_CY() { return (int)64L; }

    static final int VTBIT_DECIMAL() { return (int)16384L; }

    static final int VT_HARDTYPE() { return (int)32768L; }

    static final int MEMBERID_NIL() { return (int)-1L; }

    static final int ID_DEFAULTINST() { return (int)-2L; }

    static final int MASK_TO_RESET_TLB_BITS() { return (int)-97L; }

    static final int E_DRAW() { return (int)-2147221184L; }

    static final int DATA_E_FORMATETC() { return (int)-2147221404L; }

    static final int OLEIVERB_PRIMARY() { return (int)0L; }

    static final int OLEIVERB_SHOW() { return (int)-1L; }

    static final int OLEIVERB_OPEN() { return (int)-2L; }

    static final int OLEIVERB_HIDE() { return (int)-3L; }

    static final int OLEIVERB_UIACTIVATE() { return (int)-4L; }

    static final int OLEIVERB_INPLACEACTIVATE() { return (int)-5L; }

    static final int OLEIVERB_DISCARDUNDOSTATE() { return (int)-6L; }

    static final int EMBDHLP_INPROC_HANDLER() { return (int)0L; }

    static final int EMBDHLP_INPROC_SERVER() { return (int)1L; }

    static final int EMBDHLP_CREATENOW() { return (int)0L; }

    static final int EMBDHLP_DELAYCREATE() { return (int)65536L; }

    static final long OPENFILENAME_SIZE_VERSION_400A() { return 136L; }

    static final long OPENFILENAME_SIZE_VERSION_400W() { return 136L; }

    static final long OPENFILENAME_SIZE_VERSION_400() { return 136L; }

    static final int CDN_FIRST() { return (int)4294966695L; }

    static final int CDN_LAST() { return (int)4294966597L; }

    static final int CDN_INITDONE() { return (int)4294966695L; }

    static final int CDN_SELCHANGE() { return (int)4294966694L; }

    static final int CDN_FOLDERCHANGE() { return (int)4294966693L; }

    static final int CDN_SHAREVIOLATION() { return (int)4294966692L; }

    static final int CDN_HELP() { return (int)4294966691L; }

    static final int CDN_FILEOK() { return (int)4294966690L; }

    static final int CDN_TYPECHANGE() { return (int)4294966689L; }

    static final int CDN_INCLUDEITEM() { return (int)4294966688L; }

    static final int CDM_FIRST() { return (int)1124L; }

    static final int CDM_LAST() { return (int)1224L; }

    static final int CDM_GETSPEC() { return (int)1124L; }

    static final int CDM_GETFILEPATH() { return (int)1125L; }

    static final int CDM_GETFOLDERPATH() { return (int)1126L; }

    static final int CDM_GETFOLDERIDLIST() { return (int)1127L; }

    static final int CDM_SETCONTROLTEXT() { return (int)1128L; }

    static final int CDM_HIDECONTROL() { return (int)1129L; }

    static final int CDM_SETDEFEXT() { return (int)1130L; }

    static final int FR_MATCHALEFHAMZA() { return (int)2147483648L; }

    static final int FRM_FIRST() { return (int)1124L; }

    static final int FRM_LAST() { return (int)1224L; }

    static final int FRM_SETOPERATIONRESULT() { return (int)1124L; }

    static final int FRM_SETOPERATIONRESULTTEXT() { return (int)1125L; }

    static final int CF_BOTH() { return (int)3L; }

    static final int CF_SHOWHELP() { return (int)4L; }

    static final int CF_ENABLEHOOK() { return (int)8L; }

    static final int CF_ENABLETEMPLATE() { return (int)16L; }

    static final int CF_ENABLETEMPLATEHANDLE() { return (int)32L; }

    static final int CF_INITTOLOGFONTSTRUCT() { return (int)64L; }

    static final int CF_USESTYLE() { return (int)128L; }

    static final int CF_EFFECTS() { return (int)256L; }

    static final int CF_APPLY() { return (int)512L; }

    static final int CF_ANSIONLY() { return (int)1024L; }

    static final int CF_SCRIPTSONLY() { return (int)1024L; }

    static final int CF_NOVECTORFONTS() { return (int)2048L; }

    static final int CF_NOOEMFONTS() { return (int)2048L; }

    static final int CF_NOSIMULATIONS() { return (int)4096L; }

    static final int CF_LIMITSIZE() { return (int)8192L; }

    static final int CF_FIXEDPITCHONLY() { return (int)16384L; }

    static final int CF_WYSIWYG() { return (int)32768L; }

    static final int CF_FORCEFONTEXIST() { return (int)65536L; }

    static final int CF_SCALABLEONLY() { return (int)131072L; }

    static final int CF_TTONLY() { return (int)262144L; }

    static final int CF_NOFACESEL() { return (int)524288L; }

    static final int CF_NOSTYLESEL() { return (int)1048576L; }

    static final int CF_NOSIZESEL() { return (int)2097152L; }

    static final int CF_SELECTSCRIPT() { return (int)4194304L; }

    static final int CF_NOSCRIPTSEL() { return (int)8388608L; }

    static final int CF_NOVERTFONTS() { return (int)16777216L; }

    static final int CF_INACTIVEFONTS() { return (int)33554432L; }

    static final int WM_CHOOSEFONT_GETLOGFONT() { return (int)1025L; }

    static final int WM_CHOOSEFONT_SETLOGFONT() { return (int)1125L; }

    static final int WM_CHOOSEFONT_SETFLAGS() { return (int)1126L; }

    static final MemorySegment LBSELCHSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_LBSelChangedNotify");
    static final jdk.incubator.foreign.MemorySegment LBSELCHSTRINGA() { return LBSELCHSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment SHAREVISTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_ShareViolation");
    static final jdk.incubator.foreign.MemorySegment SHAREVISTRINGA() { return SHAREVISTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment FILEOKSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_FileNameOK");
    static final jdk.incubator.foreign.MemorySegment FILEOKSTRINGA() { return FILEOKSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment COLOROKSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_ColorOK");
    static final jdk.incubator.foreign.MemorySegment COLOROKSTRINGA() { return COLOROKSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment SETRGBSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_SetRGBColor");
    static final jdk.incubator.foreign.MemorySegment SETRGBSTRINGA() { return SETRGBSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment HELPMSGSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_help");
    static final jdk.incubator.foreign.MemorySegment HELPMSGSTRINGA() { return HELPMSGSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment FINDMSGSTRINGA$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_FindReplace");
    static final jdk.incubator.foreign.MemorySegment FINDMSGSTRINGA() { return FINDMSGSTRINGA$SEGMENT_CONSTANT_; }

    static final MemorySegment LBSELCHSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment LBSELCHSTRINGW() { return LBSELCHSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment SHAREVISTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment SHAREVISTRINGW() { return SHAREVISTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment FILEOKSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment FILEOKSTRINGW() { return FILEOKSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment COLOROKSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment COLOROKSTRINGW() { return COLOROKSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment SETRGBSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment SETRGBSTRINGW() { return SETRGBSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment HELPMSGSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment HELPMSGSTRINGW() { return HELPMSGSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment FINDMSGSTRINGW$SEGMENT_CONSTANT_ = CLinker.toCString("c");
    static final jdk.incubator.foreign.MemorySegment FINDMSGSTRINGW() { return FINDMSGSTRINGW$SEGMENT_CONSTANT_; }

    static final MemorySegment LBSELCHSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_LBSelChangedNotify");
    static final jdk.incubator.foreign.MemorySegment LBSELCHSTRING() { return LBSELCHSTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment SHAREVISTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_ShareViolation");
    static final jdk.incubator.foreign.MemorySegment SHAREVISTRING() { return SHAREVISTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment FILEOKSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_FileNameOK");
    static final jdk.incubator.foreign.MemorySegment FILEOKSTRING() { return FILEOKSTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment COLOROKSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_ColorOK");
    static final jdk.incubator.foreign.MemorySegment COLOROKSTRING() { return COLOROKSTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment SETRGBSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_SetRGBColor");
    static final jdk.incubator.foreign.MemorySegment SETRGBSTRING() { return SETRGBSTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment HELPMSGSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_help");
    static final jdk.incubator.foreign.MemorySegment HELPMSGSTRING() { return HELPMSGSTRING$SEGMENT_CONSTANT_; }

    static final MemorySegment FINDMSGSTRING$SEGMENT_CONSTANT_ = CLinker.toCString("commdlg_FindReplace");
    static final jdk.incubator.foreign.MemorySegment FINDMSGSTRING() { return FINDMSGSTRING$SEGMENT_CONSTANT_; }

    static final int CD_LBSELNOITEMS() { return (int)-1L; }

    static final int PD_EXCL_COPIESANDCOLLATE() { return (int)33024L; }

    static final int START_PAGE_GENERAL() { return (int)4294967295L; }

    static final int WM_PSD_PAGESETUPDLG() { return (int)1024L; }

    static final int WM_PSD_FULLPAGERECT() { return (int)1025L; }

    static final int WM_PSD_MINMARGINRECT() { return (int)1026L; }

    static final int WM_PSD_MARGINRECT() { return (int)1027L; }

    static final int WM_PSD_GREEKTEXTRECT() { return (int)1028L; }

    static final int WM_PSD_ENVSTAMPRECT() { return (int)1029L; }

    static final int WM_PSD_YAFULLPAGERECT() { return (int)1030L; }

    static final MemorySegment SERVICES_ACTIVE_DATABASEW$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment SERVICES_ACTIVE_DATABASEW() { return SERVICES_ACTIVE_DATABASEW$SEGMENT_CONSTANT_; }

    static final MemorySegment SERVICES_FAILED_DATABASEW$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment SERVICES_FAILED_DATABASEW() { return SERVICES_FAILED_DATABASEW$SEGMENT_CONSTANT_; }

    static final MemorySegment SERVICES_ACTIVE_DATABASEA$SEGMENT_CONSTANT_ = CLinker.toCString("ServicesActive");
    static final jdk.incubator.foreign.MemorySegment SERVICES_ACTIVE_DATABASEA() { return SERVICES_ACTIVE_DATABASEA$SEGMENT_CONSTANT_; }

    static final MemorySegment SERVICES_FAILED_DATABASEA$SEGMENT_CONSTANT_ = CLinker.toCString("ServicesFailed");
    static final jdk.incubator.foreign.MemorySegment SERVICES_FAILED_DATABASEA() { return SERVICES_FAILED_DATABASEA$SEGMENT_CONSTANT_; }

    static final short SC_GROUP_IDENTIFIERW() { return (short)43L; }

    static final int SC_GROUP_IDENTIFIERA() { return (int)43L; }

    static final MemorySegment SERVICES_ACTIVE_DATABASE$SEGMENT_CONSTANT_ = CLinker.toCString("ServicesActive");
    static final jdk.incubator.foreign.MemorySegment SERVICES_ACTIVE_DATABASE() { return SERVICES_ACTIVE_DATABASE$SEGMENT_CONSTANT_; }

    static final MemorySegment SERVICES_FAILED_DATABASE$SEGMENT_CONSTANT_ = CLinker.toCString("ServicesFailed");
    static final jdk.incubator.foreign.MemorySegment SERVICES_FAILED_DATABASE() { return SERVICES_FAILED_DATABASE$SEGMENT_CONSTANT_; }

    static final int SC_GROUP_IDENTIFIER() { return (int)43L; }

    static final int SERVICE_NO_CHANGE() { return (int)4294967295L; }

    static final int SERVICE_STATE_ALL() { return (int)3L; }

    static final int SC_MANAGER_ALL_ACCESS() { return (int)983103L; }

    static final int SERVICE_ALL_ACCESS() { return (int)983551L; }

    static final int SERVICE_NOTIFY_STATUS_CHANGE() { return (int)2L; }

    static final int SERVICE_STOP_REASON_FLAG_MAX() { return (int)2147483648L; }

    static final int SERVICE_SID_TYPE_RESTRICTED() { return (int)3L; }

    static final MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT_CONSTANT_ = CLinker.toCString("T");
    static final jdk.incubator.foreign.MemorySegment SERVICE_TRIGGER_STARTED_ARGUMENT() { return SERVICE_TRIGGER_STARTED_ARGUMENT$SEGMENT_CONSTANT_; }

    static final MemorySegment SC_AGGREGATE_STORAGE_KEY$SEGMENT_CONSTANT_ = CLinker.toCString("S");
    static final jdk.incubator.foreign.MemorySegment SC_AGGREGATE_STORAGE_KEY() { return SC_AGGREGATE_STORAGE_KEY$SEGMENT_CONSTANT_; }

    static final int MDM_MASK_PROTOCOLINFO() { return (int)268369920L; }

    static final int MDM_SHIFT_PROTOCOLINFO() { return (int)16L; }

    static final int MDM_MASK_EXTENDEDINFO() { return (int)268431360L; }

    static final int MDM_SHIFT_EXTENDEDINFO() { return (int)12L; }

    static final int MDM_MASK_HDLCPPP_AUTH() { return (int)56L; }

    static final int MDM_MASK_HDLCPPP_ML() { return (int)192L; }

    static final int MDM_PROTOCOL_HDLCPPP_64K() { return (int)1114112L; }

    static final int MDM_PROTOCOL_HDLCPPP_56K() { return (int)2162688L; }

    static final int MDM_PROTOCOL_HDLCPPP_112K() { return (int)136380416L; }

    static final int MDM_PROTOCOL_HDLCPPP_112K_PAP() { return (int)153157632L; }

    static final int MDM_PROTOCOL_HDLCPPP_112K_CHAP() { return (int)161546240L; }

    static final int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() { return (int)169934848L; }

    static final int MDM_PROTOCOL_HDLCPPP_128K() { return (int)135331840L; }

    static final int MDM_PROTOCOL_HDLCPPP_128K_PAP() { return (int)152109056L; }

    static final int MDM_PROTOCOL_HDLCPPP_128K_CHAP() { return (int)160497664L; }

    static final int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() { return (int)168886272L; }

    static final int MDM_MASK_V120_ML() { return (int)192L; }

    static final int MDM_PROTOCOL_V120_64K() { return (int)68485120L; }

    static final int MDM_PROTOCOL_V120_56K() { return (int)69533696L; }

    static final int MDM_PROTOCOL_V120_112K() { return (int)136642560L; }

    static final int MDM_PROTOCOL_V120_128K() { return (int)135593984L; }

    static final int MDM_PROTOCOL_X75_64K() { return (int)1245184L; }

    static final int MDM_PROTOCOL_X75_128K() { return (int)2293760L; }

    static final int MDM_PROTOCOL_X75_T_70() { return (int)3342336L; }

    static final int MDM_PROTOCOL_X75_BTX() { return (int)4390912L; }

    static final int MDM_PROTOCOL_V110_1DOT2K() { return (int)1310720L; }

    static final int MDM_PROTOCOL_V110_2DOT4K() { return (int)2359296L; }

    static final int MDM_PROTOCOL_V110_4DOT8K() { return (int)3407872L; }

    static final int MDM_PROTOCOL_V110_9DOT6K() { return (int)4456448L; }

    static final int MDM_PROTOCOL_V110_12DOT0K() { return (int)5505024L; }

    static final int MDM_PROTOCOL_V110_14DOT4K() { return (int)6553600L; }

    static final int MDM_PROTOCOL_V110_19DOT2K() { return (int)7602176L; }

    static final int MDM_PROTOCOL_V110_28DOT8K() { return (int)8650752L; }

    static final int MDM_PROTOCOL_V110_38DOT4K() { return (int)9699328L; }

    static final int MDM_PROTOCOL_V110_57DOT6K() { return (int)10747904L; }

    static final int MDM_MASK_AUTO_ML() { return (int)192L; }

    static final int MDM_PROTOCOL_AUTO_1CH() { return (int)67502080L; }

    static final int MDM_PROTOCOL_AUTO_2CH() { return (int)134610944L; }

    static final int MDM_PROTOCOL_ANALOG_RLP() { return (int)458752L; }

    static final int MDM_PROTOCOL_ANALOG_NRLP() { return (int)1507328L; }

    static final int MDM_PROTOCOL_ANALOG_V34() { return (int)2555904L; }

    static final int MDM_PROTOCOL_GPRS() { return (int)524288L; }

    static final int MDM_PROTOCOL_PIAFS_INCOMING() { return (int)589824L; }

    static final int MDM_PROTOCOL_PIAFS_OUTGOING() { return (int)1638400L; }

    static final int ISC_SHOWUICOMPOSITIONWINDOW() { return (int)2147483648L; }

    static final int ISC_SHOWUIALL() { return (int)3221225487L; }

    static final int IGP_GETIMEVERSION() { return (int)4294967292L; }

    static final int SCS_SETSTR() { return (int)9L; }

    static final int SCS_CHANGEATTR() { return (int)18L; }

    static final int SCS_CHANGECLAUSE() { return (int)36L; }

    static final int IME_CMODE_CHINESE() { return (int)1L; }

    static final int IME_CMODE_HANGUL() { return (int)1L; }

    static final int IME_CMODE_JAPANESE() { return (int)1L; }

    static final int IME_CMODE_HANGEUL() { return (int)1L; }

    static final int IME_CMODE_RESERVED() { return (int)4026531840L; }

    static final int IMM_ERROR_NODATA() { return (int)-1L; }

    static final int IMM_ERROR_GENERAL() { return (int)-2L; }

    static final int IME_REGWORD_STYLE_USER_FIRST() { return (int)2147483648L; }

    static final int IME_REGWORD_STYLE_USER_LAST() { return (int)4294967295L; }

    static final int IMFS_GRAYED() { return (int)3L; }

    static final int IMFS_DISABLED() { return (int)3L; }

    static final int IMFS_CHECKED() { return (int)8L; }

    static final int IMFS_HILITE() { return (int)128L; }

    static final int IMFS_ENABLED() { return (int)0L; }

    static final int IMFS_UNCHECKED() { return (int)0L; }

    static final int IMFS_UNHILITE() { return (int)0L; }

    static final int IMFS_DEFAULT() { return (int)4096L; }

}

